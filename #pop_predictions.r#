####################
#Population projections for mexico at the State and County level
#
#Since the Conapo estimates of the Mexican population aren't provided at
#the state level or county level (at least going bak to 1990) this
#program runs a few linear regressionsto get them
#



###########################################
library(reshape)
library(ggplot2)

#borrowed from
#http://learnr.wordpress.com/2009/09/24/ggplot2-back-to-back-bar-charts/
commapos <- function(x, ...) {
     format(abs(x), big.mark = ",", trim = TRUE,
         scientific = FALSE, ...)
}

#Here's a plot showing the difference between the conapo data and a
#simple linear regression using data from the censuses of 1990 and
#2000 and the surveys of 1995 and 2005
conapo <- c(83971014, 91724528, 98438557, 103946866)
census <- c(81249645, 91158290, 97483412, 103263388)
years <- c(1990,1995,2000,2005)
pop <- data.frame(conapo, census, years)
#The Conapo is overestimating the population
ggplot(melt(pop, id="years"), aes(years, value, group=variable,
       color=variable)) +
    geom_line() + geom_smooth(aes(x=years, y=census), linetype=2, method="lm",
                              se= F) +
    geom_point() +
    scale_y_continuous(formatter = "commapos") +
    opts(title="Population of Mexico")
dev.print(png, "conapo vs census.png", width=500, height=500)

#Some more tests
st <- read.csv("inegi-states.csv")
head(st)
years <- c(1990,1995,2000,2005)
lm.out <- lm(st[,2] ~ Year, data = st)
lm.lo <- loess(st[,2] ~ Year, data = st, control=loess.control(surface="direct"))
new.years <- data.frame(Year = c(1990:2008))
predict(lm.out, new.years)

################################################3
#Estimates at the state level
mst <- melt(st, id="Year")
lm_df <- function(df) {
  lm(value ~ years, data = df)
}
dmodels <- dlply(mst, .(variable), lm_df)
dcoefs <- ldply(dmodels, function(x) c(coef(x)))
names(dcoefs)[2:3] <- c("intercept", "slope")
pred <- function(df) {
  df$intercept + 1990:2008*df$slope
}
prediction <- ddply(dcoefs, .(variable), pred)
prediction$V1 <- c(t(st)[2:nrow(t(st)), 1])
prediction$V6 <- c(t(st)[2:nrow(t(st)), 2])
prediction$V11 <- c(t(st)[2:nrow(t(st)), 3])
prediction$V16 <- c(t(st)[2:nrow(t(st)), 4])
names(prediction) <- c("State",1990:2008)
#fix(prediction)
write.csv(prediction, "projections\\projection-states.csv", row.names = F)

#########################################################################
#Estimates at the county level, including separate ones for men and women
countyProjections <- function (Sex) {
  cleandata <- function(filename, Year) {
    df <- read.csv(filename)
    df$Year <- Year
    df <- subset(df, Code != "#NAME?" & County != "Total")
    df
  }
  ct1990 <- cleandata("inegi1990.csv", 1990)
  ct1995 <- cleandata("inegi1995.csv", 1995)
  ct2000 <- cleandata("inegi2000.csv", 2000)
  ct2005 <- cleandata("inegi2005.csv", 2005)
  names(ct2005) <- c("Code", "County", "Total", "Hombres", "Mujeres", "Year" )
  ct <- merge(ct2005, ct2000, by=c("Code", "County"))
  ct <- merge(ct, ct1995, by=c("Code","County"))
  ct <- merge(ct, ct1990, by=c("Code", "County"))
  ct <- rbind(ct1990, ct1995, ct2000, ct2005)
  lm_df <- function(df) {
    lm(df[[Sex]] ~ df$Year)
  }
  dmodels <- dlply(ct, .(Code), lm_df)
  dcoefs <- ldply(dmodels, function(x) c(coef(x)))
  names(dcoefs)[2:3] <- c("intercept", "slope")
  pred <- function(df) {
    df$intercept + 1990:2008*df$slope
  }
  prediction <- ddply(dcoefs, .(Code), pred)
  t <- merge(ct2005, prediction, by ="Code")
  t <- subset(t, County != "Estados Unidos Mexicanos")
  t$Total <- NULL;t$Hombres <- NULL;t$Mujeres <- NULL;t$Year <- NULL
  names(t) <- c("Code", "State", 1990:2008)
  t
 # fix(nas)
 # fix(t)
}

df.T <- countyProjections("Total")
write.csv(df.T, "projections\\county-projections-all.csv", row.names = F)

df.M <- countyProjections("Mujeres")
write.csv(df.M, "projections\\county-projections-women.csv", row.names = F)

df.H <- countyProjections("Hombres")
write.csv(df.H, "projections\\county-projections-men.csv", row.names = F)


